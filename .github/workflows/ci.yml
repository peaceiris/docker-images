name: Docker

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  hadolint:
    uses: peaceiris/workflows/.github/workflows/hadolint.yml@main

  build_matrix:
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    permissions: {}
    outputs:
      dirs: ${{ steps.build_matrix.outputs.dirs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: main
      - name: Get target dirs
        id: build_matrix
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [[ "${{ github.event_name == 'pull_request' }}" = "true" ]]; then
            gh pr checkout "$(jq -r '.pull_request.number' "${GITHUB_EVENT_PATH}")"
            DIRS=$(git diff --name-only main ./images | xargs dirname | sort | uniq)
            if [[ -z "${DIRS}" ]]; then
              JSON="[]"
            else
              JSON=$(jq -n -c '$ARGS.positional' --args "${DIRS}")
            fi
          else
            DIRS=($(find . -type f -name "Dockerfile" -exec dirname {} \; | sort | uniq))
            JSON=$(jq -n -c '$ARGS.positional' --args "${DIRS[@]}")
          fi
          echo "dirs=${JSON}" | tee -a "${GITHUB_OUTPUT}"

  build_and_push:
    needs: build_matrix
    if: needs.build_matrix.outputs.dirs != '[]'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    permissions:
      actions: write
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.build_matrix.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v4

      - uses: peaceiris/actions-export-envs@v1.1.0
        id: envs

      - name: Build with cache
        run: make build
        if: github.event_name == 'pull_request'
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ steps.envs.outputs.ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_CACHE_URL: ${{ steps.envs.outputs.ACTIONS_CACHE_URL }}

      - run: make login
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build without cache
        run: make build
        if: github.event_name != 'pull_request'
        env:
          DOCKER_MULTI_PLATFORM: true
